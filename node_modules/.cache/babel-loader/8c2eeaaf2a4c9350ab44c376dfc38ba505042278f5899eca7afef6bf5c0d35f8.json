{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// src/store.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    products: []\n  },\n  mutations: {\n    addProduct(state, product) {\n      state.products.push(product);\n    },\n    updateProduct(state, {\n      productId,\n      updatedProduct\n    }) {\n      const index = state.products.findIndex(p => p.id === productId);\n      if (index !== -1) {\n        state.products.splice(index, 1, updatedProduct);\n      }\n    },\n    deleteProduct(state, productId) {\n      state.products = state.products.filter(p => p.id !== productId);\n    }\n  },\n  actions: {\n    addProduct({\n      commit\n    }, product) {\n      commit('addProduct', product);\n    },\n    updateProduct({\n      commit\n    }, payload) {\n      commit('updateProduct', payload);\n    },\n    deleteProduct({\n      commit\n    }, productId) {\n      commit('deleteProduct', productId);\n    }\n  },\n  getters: {\n    getAllProducts(state) {\n      return state.products;\n    },\n    getProductById: state => id => {\n      return state.products.find(product => product.id === id);\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","products","mutations","addProduct","product","push","updateProduct","productId","updatedProduct","index","findIndex","p","id","splice","deleteProduct","filter","actions","commit","payload","getters","getAllProducts","getProductById","find"],"sources":["C:/midtermact2/src/store/store.js"],"sourcesContent":["// src/store.js\r\nimport { createStore } from 'vuex';\r\n\r\nexport default createStore({\r\n  state: {\r\n    products: [],\r\n  },\r\n  mutations: {\r\n    addProduct(state, product) {\r\n      state.products.push(product);\r\n    },\r\n    updateProduct(state, { productId, updatedProduct }) {\r\n      const index = state.products.findIndex(p => p.id === productId);\r\n      if (index !== -1) {\r\n        state.products.splice(index, 1, updatedProduct);\r\n      }\r\n    },\r\n    deleteProduct(state, productId) {\r\n      state.products = state.products.filter(p => p.id !== productId);\r\n    },\r\n  },\r\n  actions: {\r\n    addProduct({ commit }, product) {\r\n      commit('addProduct', product);\r\n    },\r\n    updateProduct({ commit }, payload) {\r\n      commit('updateProduct', payload);\r\n    },\r\n    deleteProduct({ commit }, productId) {\r\n      commit('deleteProduct', productId);\r\n    },\r\n  },\r\n  getters: {\r\n    getAllProducts(state) {\r\n      return state.products;\r\n    },\r\n    getProductById: state => id => {\r\n      return state.products.find(product => product.id === id);\r\n    },\r\n  },\r\n});\r\n"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,SAAS,EAAE;IACTC,UAAUA,CAACH,KAAK,EAAEI,OAAO,EAAE;MACzBJ,KAAK,CAACC,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;IAC9B,CAAC;IACDE,aAAaA,CAACN,KAAK,EAAE;MAAEO,SAAS;MAAEC;IAAe,CAAC,EAAE;MAClD,MAAMC,KAAK,GAAGT,KAAK,CAACC,QAAQ,CAACS,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,SAAS,CAAC;MAC/D,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBT,KAAK,CAACC,QAAQ,CAACY,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MACjD;IACF,CAAC;IACDM,aAAaA,CAACd,KAAK,EAAEO,SAAS,EAAE;MAC9BP,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACc,MAAM,CAACJ,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,SAAS,CAAC;IACjE;EACF,CAAC;EACDS,OAAO,EAAE;IACPb,UAAUA,CAAC;MAAEc;IAAO,CAAC,EAAEb,OAAO,EAAE;MAC9Ba,MAAM,CAAC,YAAY,EAAEb,OAAO,CAAC;IAC/B,CAAC;IACDE,aAAaA,CAAC;MAAEW;IAAO,CAAC,EAAEC,OAAO,EAAE;MACjCD,MAAM,CAAC,eAAe,EAAEC,OAAO,CAAC;IAClC,CAAC;IACDJ,aAAaA,CAAC;MAAEG;IAAO,CAAC,EAAEV,SAAS,EAAE;MACnCU,MAAM,CAAC,eAAe,EAAEV,SAAS,CAAC;IACpC;EACF,CAAC;EACDY,OAAO,EAAE;IACPC,cAAcA,CAACpB,KAAK,EAAE;MACpB,OAAOA,KAAK,CAACC,QAAQ;IACvB,CAAC;IACDoB,cAAc,EAAErB,KAAK,IAAIY,EAAE,IAAI;MAC7B,OAAOZ,KAAK,CAACC,QAAQ,CAACqB,IAAI,CAAClB,OAAO,IAAIA,OAAO,CAACQ,EAAE,KAAKA,EAAE,CAAC;IAC1D;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}