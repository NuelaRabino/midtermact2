{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductList = _resolveComponent(\"ProductList\");\n  const _component_AddProductForm = _resolveComponent(\"AddProductForm\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ProductList, {\n    products: $data.products\n  }, null, 8 /* PROPS */, [\"products\"]), _createVNode(_component_AddProductForm)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_ProductList","products","$data","_component_AddProductForm"],"sources":["C:\\midtermact2\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <ProductList :products=\"products\" />\n    <AddProductForm />\n  </div>\n</template>\n\n<script>\nimport ProductList from './components/ProductList.vue';\nimport AddProductForm from './components/AddProductForm.vue';\nimport store from './store'; // Import your Vuex store\n\nexport default {\n  name: 'App',\n  components: {\n    ProductList,\n    AddProductForm\n  },\n  data() {\n    return {\n      products: [\n        // Initial dummy products, you can fetch actual products from Vuex store\n        { id: 1, name: 'Product 1', description: 'Description 1', price: 10 },\n        { id: 2, name: 'Product 2', description: 'Description 2', price: 20 },\n        { id: 3, name: 'Product 3', description: 'Description 3', price: 30 },\n      ]\n    };\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAoCC,sBAAA;IAAtBC,QAAQ,EAAEC,KAAA,CAAAD;EAAQ,uCAChCF,YAAA,CAAkBI,yBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}