{"ast":null,"code":"import ProductItem from './ProductItem.vue';\nexport default {\n  name: 'ProductList',\n  props: ['products'],\n  components: {\n    ProductItem\n  },\n  methods: {\n    toggleEditing(product) {\n      product.isEditing = true;\n    },\n    saveEditedProduct(updatedProduct) {\n      // Emit an event to notify the parent component (App.vue) of the edited products\n      updatedProduct.isEditing = false;\n      this.$emit('handleUpdateProducts', updatedProduct);\n    },\n    deleteProduct(product) {\n      console.log('Deleting product:', product);\n    },\n    cancelEditing(product) {\n      product.isEditing = false;\n    }\n  }\n};","map":{"version":3,"names":["ProductItem","name","props","components","methods","toggleEditing","product","isEditing","saveEditedProduct","updatedProduct","$emit","deleteProduct","console","log","cancelEditing"],"sources":["D:\\midtermact2-1\\src\\components\\ProductList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Product List</h2>\r\n    <div v-for=\"(product, index) in products\" :key=\"index\">\r\n      <div v-if=\"!product.isEditing\">\r\n        <ProductItem :product=\"product\" @edit=\"toggleEditing(product)\" @delete=\"deleteProduct(product)\" />\r\n      </div>\r\n      <div v-else>\r\n        <form @submit.prevent=\"saveEditedProduct(product)\">\r\n          <input type=\"text\" v-model=\"product.name\" required> <br>\r\n          <input type=\"text\" v-model=\"product.description\" required> <br>\r\n          <input type=\"number\" v-model.number=\"product.price\" required min=\"0\"> <br>\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" @click=\"cancelEditing(product)\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductItem from './ProductItem.vue';\r\n\r\nexport default {\r\n  name: 'ProductList',\r\n  props: ['products'],\r\n  components: {\r\n    ProductItem,\r\n  },\r\n  methods: {\r\n    toggleEditing(product) {\r\n      product.isEditing = true;\r\n    },\r\n    saveEditedProduct(updatedProduct) {\r\n      // Emit an event to notify the parent component (App.vue) of the edited products\r\n      updatedProduct.isEditing = false;\r\n      this.$emit('handleUpdateProducts', updatedProduct);\r\n    },\r\n    deleteProduct(product) {\r\n      console.log('Deleting product:', product);\r\n    },\r\n    cancelEditing(product) {\r\n      product.isEditing = false;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add your component's styles here */\r\n</style>"],"mappings":"AAqBA,OAAOA,WAAU,MAAO,mBAAmB;AAE3C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,aAAaA,CAACC,OAAO,EAAE;MACrBA,OAAO,CAACC,SAAQ,GAAI,IAAI;IAC1B,CAAC;IACDC,iBAAiBA,CAACC,cAAc,EAAE;MAChC;MACAA,cAAc,CAACF,SAAQ,GAAI,KAAK;MAChC,IAAI,CAACG,KAAK,CAAC,sBAAsB,EAAED,cAAc,CAAC;IACpD,CAAC;IACDE,aAAaA,CAACL,OAAO,EAAE;MACrBM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,OAAO,CAAC;IAC3C,CAAC;IACDQ,aAAaA,CAACR,OAAO,EAAE;MACrBA,OAAO,CAACC,SAAQ,GAAI,KAAK;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}