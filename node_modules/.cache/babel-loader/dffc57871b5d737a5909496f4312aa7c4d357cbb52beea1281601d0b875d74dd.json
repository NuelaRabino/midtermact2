{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ProductItem from './ProductItem.vue';\nimport AddProductForm from './AddProductForm.vue'; // Import the AddProductForm component\n\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductItem,\n    AddProductForm // Register the AddProductForm component\n  },\n  data() {\n    return {\n      localProducts: []\n    };\n  },\n  watch: {\n    products: {\n      handler(newVal) {\n        this.localProducts = [...newVal];\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    toggleEditing(product) {\n      product.isEditing = true;\n    },\n    saveEditedProduct(updatedProduct) {\n      updatedProduct.isEditing = false;\n      this.$emit('handleUpdateProducts', updatedProduct);\n    },\n    deleteProduct(index) {\n      const deletedProduct = this.localProducts[index];\n      this.localProducts.splice(index, 1);\n      console.log('Deleted product:', deletedProduct);\n    },\n    cancelEditing(product) {\n      product.isEditing = false;\n    },\n    addProductToList(newProduct) {\n      this.localProducts.push(newProduct);\n    }\n  }\n};","map":{"version":3,"names":["ProductItem","AddProductForm","name","components","data","localProducts","watch","products","handler","newVal","immediate","methods","toggleEditing","product","isEditing","saveEditedProduct","updatedProduct","$emit","deleteProduct","index","deletedProduct","splice","console","log","cancelEditing","addProductToList","newProduct","push"],"sources":["D:\\midtermact2-1\\src\\components\\AddProductForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-list\">\r\n    <h2>Product List</h2>\r\n    <div v-for=\"(product, index) in localProducts\" :key=\"index\" class=\"product-item\">\r\n      <div v-if=\"!product.isEditing\" class=\"product-details\">\r\n        <ProductItem :product=\"product\" @edit=\"toggleEditing(product)\" @delete=\"deleteProduct(index)\" />\r\n      </div>\r\n      <div v-else class=\"edit-form\">\r\n        <form @submit.prevent=\"saveEditedProduct(product)\">\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" v-model=\"product.name\" required placeholder=\"Product Name\" class=\"form-input\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"text\" v-model=\"product.description\" required placeholder=\"Description\" class=\"form-input\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input type=\"number\" v-model.number=\"product.price\" required min=\"0\" placeholder=\"Price\" class=\"form-input\">\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button type=\"submit\" class=\"save-button\">Save</button>\r\n            <button type=\"button\" @click=\"cancelEditing(product)\" class=\"cancel-button\">Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <AddProductForm @add-product=\"addProductToList\" /> <!-- AddProductForm emits add-product event -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductItem from './ProductItem.vue';\r\nimport AddProductForm from './AddProductForm.vue'; // Import the AddProductForm component\r\n\r\nexport default {\r\n  name: 'ProductList',\r\n  components: {\r\n    ProductItem,\r\n    AddProductForm, // Register the AddProductForm component\r\n  },\r\n  data() {\r\n    return {\r\n      localProducts: [],\r\n    };\r\n  },\r\n  watch: {\r\n    products: {\r\n      handler(newVal) {\r\n        this.localProducts = [...newVal];\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    toggleEditing(product) {\r\n      product.isEditing = true;\r\n    },\r\n    saveEditedProduct(updatedProduct) {\r\n      updatedProduct.isEditing = false;\r\n      this.$emit('handleUpdateProducts', updatedProduct);\r\n    },\r\n    deleteProduct(index) {\r\n      const deletedProduct = this.localProducts[index];\r\n      this.localProducts.splice(index, 1);\r\n      console.log('Deleted product:', deletedProduct);\r\n    },\r\n    cancelEditing(product) {\r\n      product.isEditing = false;\r\n    },\r\n    addProductToList(newProduct) {\r\n      this.localProducts.push(newProduct);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles remain unchanged */\r\n</style>"],"mappings":";AA8BA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,cAAa,MAAO,sBAAsB,EAAE;;AAEnD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVH,WAAW;IACXC,cAAc,CAAE;EAClB,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACJ,aAAY,GAAI,CAAC,GAAGI,MAAM,CAAC;MAClC,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,OAAO,EAAE;MACrBA,OAAO,CAACC,SAAQ,GAAI,IAAI;IAC1B,CAAC;IACDC,iBAAiBA,CAACC,cAAc,EAAE;MAChCA,cAAc,CAACF,SAAQ,GAAI,KAAK;MAChC,IAAI,CAACG,KAAK,CAAC,sBAAsB,EAAED,cAAc,CAAC;IACpD,CAAC;IACDE,aAAaA,CAACC,KAAK,EAAE;MACnB,MAAMC,cAAa,GAAI,IAAI,CAACf,aAAa,CAACc,KAAK,CAAC;MAChD,IAAI,CAACd,aAAa,CAACgB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MACnCG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,cAAc,CAAC;IACjD,CAAC;IACDI,aAAaA,CAACX,OAAO,EAAE;MACrBA,OAAO,CAACC,SAAQ,GAAI,KAAK;IAC3B,CAAC;IACDW,gBAAgBA,CAACC,UAAU,EAAE;MAC3B,IAAI,CAACrB,aAAa,CAACsB,IAAI,CAACD,UAAU,CAAC;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}