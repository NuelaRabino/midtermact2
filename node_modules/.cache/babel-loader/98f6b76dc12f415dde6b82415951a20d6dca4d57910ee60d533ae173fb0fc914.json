{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AddProductForm',\n  data() {\n    return {\n      name: '',\n      description: '',\n      price: 0\n    };\n  },\n  methods: {\n    submitForm() {\n      // Price Validation\n      if (parseFloat(this.price) < 0) {\n        window.alert(\"Invalid Input Error: Price cannot be negative.\");\n        return;\n      }\n      const newProduct = {\n        id: Math.floor(Math.random() * 1000),\n        // Generate a random ID (for demo)\n        name: this.name,\n        description: this.description,\n        price: parseFloat(this.price),\n        isEditing: false\n      };\n\n      // Emit an event to notify the parent component (ProductList) to add the product\n      this.$emit('add-product', newProduct);\n\n      // Reset the form fields\n      this.name = '';\n      this.description = '';\n      this.price = 0;\n    },\n    goToProductList() {\n      this.$router.push('/product-list'); // Assuming you're using Vue Router\n    }\n  }\n};","map":{"version":3,"names":["name","data","description","price","methods","submitForm","parseFloat","window","alert","newProduct","id","Math","floor","random","isEditing","$emit","goToProductList","$router","push"],"sources":["C:\\New folder\\midtermact2\\midtermact2\\src\\components\\AddProductForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-product-container\">\r\n    <h2>Add Product</h2>\r\n    <form @submit.prevent=\"submitForm\" class=\"add-product-form\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Product Name</label>\r\n        <input type=\"text\" id=\"name\" v-model=\"name\" placeholder=\"Product Name\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" id=\"description\" v-model=\"description\" placeholder=\"Description\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"price\">Price</label>\r\n        <input type=\"number\" id=\"price\" v-model.number=\"price\" placeholder=\"Price\" required min=\"0\">\r\n      </div>\r\n      <button type=\"submit\" class=\"add-product-button\">Add Product</button>\r\n    </form>\r\n    <button class=\"product-list-button\" @click=\"goToProductList\">Product List</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AddProductForm',\r\n  data() {\r\n    return {\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      // Price Validation\r\n      if (parseFloat(this.price) < 0) {\r\n        window.alert(\"Invalid Input Error: Price cannot be negative.\");\r\n        return;\r\n      }\r\n\r\n      const newProduct = {\r\n        id: Math.floor(Math.random() * 1000), // Generate a random ID (for demo)\r\n        name: this.name,\r\n        description: this.description,\r\n        price: parseFloat(this.price),\r\n        isEditing: false\r\n      };\r\n\r\n      // Emit an event to notify the parent component (ProductList) to add the product\r\n      this.$emit('add-product', newProduct);\r\n\r\n      // Reset the form fields\r\n      this.name = '';\r\n      this.description = '';\r\n      this.price = 0;\r\n    },\r\n    goToProductList() {\r\n      this.$router.push('/product-list'); // Assuming you're using Vue Router\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-product-container {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #eaeaea;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.add-product-form {\r\n  display: grid;\r\n  gap: 10px;\r\n}\r\n\r\n.form-group {\r\n  display: grid;\r\n  gap: 5px;\r\n}\r\n\r\nlabel {\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"number\"] {\r\n  width: 100%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.add-product-button,\r\n.product-list-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-product-button {\r\n  background-color: #64a100;\r\n  color: white;\r\n}\r\n\r\n.product-list-button {\r\n  margin-top: 10px;\r\n  background-color: #2377c0;\r\n  color: white;\r\n}\r\n\r\n</style>"],"mappings":";AAuBA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLD,IAAI,EAAE,EAAE;MACRE,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA,IAAIC,UAAU,CAAC,IAAI,CAACH,KAAK,IAAI,CAAC,EAAE;QAC9BI,MAAM,CAACC,KAAK,CAAC,gDAAgD,CAAC;QAC9D;MACF;MAEA,MAAMC,UAAS,GAAI;QACjBC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,IAAI,CAAC;QAAE;QACtCb,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BC,KAAK,EAAEG,UAAU,CAAC,IAAI,CAACH,KAAK,CAAC;QAC7BW,SAAS,EAAE;MACb,CAAC;;MAED;MACA,IAAI,CAACC,KAAK,CAAC,aAAa,EAAEN,UAAU,CAAC;;MAErC;MACA,IAAI,CAACT,IAAG,GAAI,EAAE;MACd,IAAI,CAACE,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,KAAI,GAAI,CAAC;IAChB,CAAC;IACDa,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC,EAAE;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}